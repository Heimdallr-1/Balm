name: publish-release
on:
  workflow_dispatch:
    inputs:
      forge:
        description: 'Forge'
        required: true
        type: boolean
        default: true
      fabric:
        description: 'Fabric'
        required: true
        type: boolean
        default: true
      neoforge:
        description: 'NeoForge'
        required: true
        type: boolean
        default: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      ref: v${{ steps.bump-version.outputs.version }}
      version: ${{ steps.bump-version.outputs.version }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extracting version from properties
        shell: bash
        run: echo "version=$(cat gradle.properties | grep -w "\bversion" | cut -d= -f2)" >> $GITHUB_OUTPUT
        id: extract-version
      - name: Bumping version
        uses: TwelveIterationMods/bump-version@v1
        with:
          version: ${{ steps.extract-version.outputs.version }}
          bump: patch
        id: bump-version
      #- name: Updating version properties
      #  run: |
      #    sed -i "s/^\s*version\s*=.*/version = ${{ steps.bump-version.outputs.version }}/g" gradle.properties
      #    git config user.name "GitHub Actions"
      #    git config user.email "<>"
      #    git commit -am "Set version to ${{ steps.bump-version.outputs.version }}"
      #    git push origin ${BRANCH_NAME}
      #    git tag -a "v${{ steps.bump-version.outputs.version }}" -m "Release ${{ steps.bump-version.outputs.version }}"
      #    git push origin "v${{ steps.bump-version.outputs.version }}"
      #  shell: bash
      #  env:
      #    BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      - name: Preparing matrix
        id: set-matrix
        uses: actions/github-script@v7
        with:
          script: |
            return {
              loader: [${{inputs.fabric}} ? 'fabric' : false, ${{inputs.forge}} ? 'forge' : false, ${{inputs.neoforge}} ? 'neoforge' : false].filter(Boolean),
              site: ['curseforge', 'modrinth', 'publish'],
              exclude: [
                {loader: 'common', site: 'curseforge'},
                {loader: 'common', site: 'modrinth'}
              ]
            }
  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.create-release.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build ${{ matrix.loader }} artifact
        run: ./gradlew :${{ matrix.loader }}:build
      - name: Upload ${{ matrix.loader }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.loader }}-artifact
          path: ${{ matrix.loader }}/build/libs/*
    needs: create-release
  publish-release:
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.create-release.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-release.outputs.ref }}
      - name: Download ${{ matrix.loader }} artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.loader }}-artifact
      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Check current artifact hash TODO
        run: sha1sum ${{ matrix.loader }}/build/libs/*
      - name: Publish
        #run: ./gradlew :${{ matrix.loader }}:${{ matrix.site }} '-Pversion=${{needs.create-release.outputs.version}}' '-PtwelveIterationsNexusUsername=${{ secrets.NEXUS_USER }}' '-PtwelveIterationsNexusPassword=${{ secrets.NEXUS_PASSWORD }}'
        run: ./gradlew :${{ matrix.loader }}:build '-Pversion=${{needs.create-release.outputs.version}}' '-PtwelveIterationsNexusUsername=${{ secrets.NEXUS_USER }}' '-PtwelveIterationsNexusPassword=${{ secrets.NEXUS_PASSWORD }}'
        #env:
        #  CURSEFORGE_TOKEN: ${{secrets.CURSEFORGE_TOKEN}}
        #  MODRINTH_TOKEN: ${{secrets.MODRINTH_TOKEN}}
      - name: Check new artifact hash TODO
        run: sha1sum ${{ matrix.loader }}/build/libs/*
    needs:
      - create-release
      - build-release